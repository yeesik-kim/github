package spinnaker

import (
	"encoding/json"
	"fmt"
	"io/ioutil"
	"log"
	"net/http"
	"os"
	"regexp"
	"strconv"
	"time"
)

type AutoGenerated []struct {
	Name string `json:"name"`
}

type RepositInfo struct {
	BranchName string
	UserName   string
	Password   string
}

func (rInfo *RepositInfo) GetBranchNames(version string) []string {
	branchNames := []string{}
	index := 1
	for index < 10 {
		time.Sleep(time.Second * 2)
		req, err := http.NewRequest("GET", "https://api.github.com/repos/spinnaker/"+rInfo.BranchName+"/branches?page="+strconv.Itoa(index), nil)
		if err != nil {
			fmt.Print(err.Error())
			os.Exit(1)
		}
		req.SetBasicAuth(rInfo.UserName, rInfo.Password)

		resp, err := http.DefaultClient.Do(req)
		if err != nil {
			fmt.Print(err.Error())
			os.Exit(1)
		}
		defer resp.Body.Close()

		responseData, err := ioutil.ReadAll(resp.Body)
		if err != nil {
			log.Fatal(err)
		}

		inputData := AutoGenerated{}
		json.Unmarshal([]byte(responseData), &inputData)
		dataSize := len(inputData)
		if dataSize == 0 {
			break
		}

		for _, r := range inputData {
			match, _ := regexp.MatchString("^(release).*.x$", r.Name)
			if match {
				if r.Name == version {
					branchNames = append(branchNames, r.Name)
					break
				}
			}
		}
		index++
	}

	return branchNames
}
